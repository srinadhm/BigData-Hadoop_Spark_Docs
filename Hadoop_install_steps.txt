echo $JAVA_HOME
hostname 
sudo su
whoami

sudo addgroup hadoop
sudo adduser hduser
sudo  adduser  hduser hadoop  

sudo visudo
hduser ALL=(ALL) ALL 
sudo apt-get install openssh-server
ssh-keygen  
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys   
chmod 700 ~/.ssh/authorized_keys   
sudo /etc/init.d/ssh  restart
ssh  localhost

sudo vim /etc/sysctl.conf
# disable ipv6			
net.ipv6.conf.all.disable_ipv6 = 1	
net.ipv6.conf.default.disable_ipv6 = 1	
net.ipv6.conf.lo.disable_ipv6 = 1


cat /proc/sys/net/ipv6/conf/all/disable_ipv6 

sudo mv ~/Desktop/hadoop-3.2.1.tar.gz /usr/local/
cd /usr/local
   sudo tar -xvf hadoop-3.2.1.tar.gz
   sudo rm hadoop-3.2.1.tar.gz
   sudo ln -s hadoop-3.2.1 hadoop
   sudo chown -R hduser:hadoop hadoop-3.2.1
   sudo chmod 777 hadoop-3.2.1


sudo vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh
export HADOOP_OPTS=-Djava.net.preferIPv4Stack=true 
export HADOOP_HOME_WARN_SUPPRESS="TRUE" 
export JAVA_HOME=/usr/local/java/jdk




vim ~/.bashrc  
# Set Hadoop-related environment variables 
export HADOOP_HOME=/usr/local/hadoop 
export HADOOP_MAPRED_HOME=${HADOOP_HOME}
export HADOOP_COMMON_HOME=${HADOOP_HOME}
export HADOOP_HDFS_HOME=${HADOOP_HOME}
export HADOOP_YARN_HOME=${HADOOP_HOME}
export HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop

# Native Path
export HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_PREFIX}/lib/native
export HADOOP_OPTS="-Djava.library.path=$HADOOP_PREFIX/lib"

# Set JAVA_HOME (we will also configure JAVA_HOME directly for Hadoop later on) 
export JAVA_HOME=/usr/local/java/jdk
# Some convenient aliases and functions for running Hadoop-related commands 
unaliasfs&> /dev/null 
aliasfs="hadoop fs" 
unaliashls&> /dev/null 
aliashls="fs -ls"  

export PATH=$PATH:$HADOOP_HOME/bin:$PATH:$JAVA_HOME/bin:$HADOOP_HOME/sbin 




sudo  vim /usr/local/hadoop/etc/hadoop/yarn-site.xml
<property>
	    <name>yarn.nodemanager.aux-services</name>
	    <value>mapreduce_shuffle</value>
  	</property>
  	<property>
     <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
   <value>org.apache.hadoop.mapred.ShuffleHandler</value>
  	</property>


sudo vim /usr/local/hadoop/etc/hadoop/core-site.xml

<property> 
	<name>hadoop.tmp.dir</name> 
	<value>/app/hadoop/tmp</value> 
	<description>A base for other temporary directories.</description> 	
	</property>  
	
 <property>
	 <name>fs.default.name</name> 				
	<value>hdfs://localhost:9000</value> 
	<description>default host and port</description> 
	</property>

sudo mkdir -p /app/hadoop/tmp
sudo chown hduser:hadoop -R /app/hadoop/tmp
sudo chmod 750 /app/hadoop/tmp

sudo vim  /usr/local/hadoop/etc/hadoop/mapred-site.xml
  <property>
    	<name>mapreduce.framework.name</name>
    	<value>yarn</value>
  	</property>
  <property>
    	<name>mapreduce.jobhistory.address</name>
  		<value>localhost:10020</value>
  		<description>Host and port for Job History Server (default 			
		0.0.0.0:10020)</description>
</property>


sudo mkdir -p /usr/local/hadoop_tmp/hdfs/namenode
sudo mkdir -p /usr/local/hadoop_tmp/hdfs/datanode
sudo chown hduser:hadoop -R /usr/local/hadoop_tmp/


sudo vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml
<property>
    <name>dfs.replication</name>
    <value>1</value>
  </property>
  <property>
    <name>dfs.namenode.name.dir</name>
    <value>file:/usr/local/hadoop_tmp/hdfs/namenode</value>
  </property>
  <property>
    <name>dfs.datanode.data.dir</name>
    <value>file:/usr/local/hadoop_tmp/hdfs/datanode</value>
  </property>


hadoop namenode -format  


$ start-dfs.sh       --starts NN,SNN,DN  --Type Yes if anything asked for
$ start-yarn.sh   --starts NodeManager,ResourceManager

$ start-dfs.sh && start-yarn.sh  --In a single line
$ start-all.sh


$mr-jobhistory-daemon.sh start historyserver
$mr-jobhistory-daemon.sh stop historyserver  --If you want to stop


$ jps 

$ hadoop fs -ls

$ hadoop fs -mkdir -p /user/hduser (Deprecated)
$ hdfs dfs -mkdir -p /user/hduser    (Use this)



http://localhost:9870

http://localhost:8088

http://localhost:19888







